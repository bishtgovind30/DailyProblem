/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        var head = new ListNode(-1);
        int carryForward =0;
        var l3 = head;
        AddRecursive(l1,l2,l3,carryForward);
        return head.next;
    }
    
    public void AddRecursive(ListNode l1, ListNode l2, ListNode l3, int carryForward) {
            if (l1 == null && l2 == null) {
                if (carryForward > 0) {
                    l3.next = new ListNode(carryForward);
                    l3 = l3.next;
                }

                return;
            }

            carryForward = carryForward + (l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val);
            l3.next = new ListNode(carryForward%10);
            carryForward = (carryForward - carryForward % 10) / 10;
            
            l1 = l1?.next;
            l2 = l2?.next;
            l3 = l3.next;
            AddRecursive(l1, l2, l3, carryForward);
        }
}